"use strict";(self.webpackChunk_react_native_video_docs=self.webpackChunk_react_native_video_docs||[]).push([["6760"],{6064:function(e,n,i){i.r(n),i.d(n,{frontMatter:()=>a,default:()=>u,toc:()=>l,metadata:()=>o,assets:()=>d,contentTitle:()=>s});var o=JSON.parse('{"id":"intro","title":"Intro","description":"About","source":"@site/versioned_docs/version-6.x/intro.md","sourceDirName":".","slug":"/intro","permalink":"/react-native-video/docs/v6/intro","draft":false,"unlisted":false,"tags":[],"version":"6.x","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Intro"},"sidebar":"docsSidebar","next":{"title":"Installation","permalink":"/react-native-video/docs/v6/installation"}}'),r=i(5893),t=i(980);let a={sidebar_position:1,title:"Intro"},s="A <Video> Component for React Native",d={},l=[{value:"About",id:"about",level:2},{value:"V6.0.0 Information",id:"v600-information",level:2},{value:"Usage",id:"usage",level:2}];function c(e){let n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsxs)(n.h1,{id:"a-video-component-for-react-native",children:["A ",(0,r.jsx)(n.code,{children:"<Video>"})," Component for React Native"]})}),"\n",(0,r.jsx)(n.h2,{id:"about",children:"About"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"react-native-video"})," is a React Native library that provides a Video component to render media content like videos and streams."]}),"\n",(0,r.jsx)(n.p,{children:"It allows you to stream video files (m3u, mpd, mp4, etc.) inside your React Native application."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"ExoPlayer for Android"}),"\n",(0,r.jsx)(n.li,{children:"AVPlayer for iOS, tvOS, and visionOS"}),"\n",(0,r.jsx)(n.li,{children:"Windows UWP for Windows"}),"\n",(0,r.jsx)(n.li,{children:"HTML5 for Web"}),"\n",(0,r.jsx)(n.li,{children:"Trick mode support"}),"\n",(0,r.jsx)(n.li,{children:"Subtitles (embedded or side-loaded)"}),"\n",(0,r.jsx)(n.li,{children:"DRM support"}),"\n",(0,r.jsx)(n.li,{children:"Client-side ad insertion (via Google IMA)"}),"\n",(0,r.jsx)(n.li,{children:"PiP (Picture-in-Picture)"}),"\n",(0,r.jsx)(n.li,{children:"Embedded playback controls"}),"\n",(0,r.jsx)(n.li,{children:"And more"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The goal of this package is to provide lightweight but full control over the player."}),"\n",(0,r.jsx)(n.h2,{id:"v600-information",children:"V6.0.0 Information"}),"\n",(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Version 6"}),": This documentation covers features available only in v6.0.0 and later.\nIf you're unsure or need an older version, you can still use ",(0,r.jsx)(n.a,{href:"https://github.com/TheWidlarzGroup/react-native-video/blob/v5.2.0/README.md",children:"version 5.2.x"}),"."]})}),"\n",(0,r.jsxs)(n.p,{children:["Version 6.x requires ",(0,r.jsx)(n.strong,{children:"react-native >= 0.68.2"})]}),"\n",(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsxs)(n.p,{children:["From ",(0,r.jsx)(n.strong,{children:"6.0.0-beta.8"}),", it also requires ",(0,r.jsx)(n.strong,{children:"iOS >= 13.0"})," (default in React Native 0.73)."]})}),"\n",(0,r.jsxs)(n.p,{children:["For older versions of React Native, ",(0,r.jsx)(n.a,{href:"https://github.com/TheWidlarzGroup/react-native-video/tree/v5.2.0",children:"please use version 5.x"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Load the module\nimport Video, { VideoRef } from 'react-native-video';\n\n// Inside your render function, assuming you have a file called\n// \"background.mp4\" in your project. You can include multiple videos\n// on a single screen if needed.\n\nconst VideoPlayer = () => {\n  const videoRef = useRef<VideoRef>(null);\n  const background = require('./background.mp4');\n\n  return (\n    <Video\n      // Can be a URL or a local file.\n      source={background}\n      // Store reference  \n      ref={videoRef}\n      // Callback when remote video is buffering                                      \n      onBuffer={onBuffer}\n      // Callback when the video cannot be loaded              \n      onError={onError}               \n      style={styles.backgroundVideo}\n    />\n  );\n};\n\n// Later in your styles...\nvar styles = StyleSheet.create({\n  backgroundVideo: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n  },\n});\n"})})]})}function u(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},980:function(e,n,i){i.d(n,{Z:()=>s,a:()=>a});var o=i(7294);let r={},t=o.createContext(r);function a(e){let n=o.useContext(t);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);