"use strict";(self.webpackChunk_react_native_video_docs=self.webpackChunk_react_native_video_docs||[]).push([["5166"],{5029:function(e,n,i){i.r(n),i.d(n,{frontMatter:()=>t,default:()=>u,toc:()=>l,metadata:()=>r,assets:()=>s,contentTitle:()=>d});var r=JSON.parse('{"id":"configuration/manual","title":"Manual Configuration","description":"Manual configuration of react-native-video","source":"@site/docs/configuration/manual.md","sourceDirName":"configuration","slug":"/configuration/manual","permalink":"/react-native-video/docs/v7/configuration/manual","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"sidebar_label":"Manual Configuration","description":"Manual configuration of react-native-video"},"sidebar":"docsSidebar","previous":{"title":"Expo Plugin","permalink":"/react-native-video/docs/v7/configuration/expo-plugin"},"next":{"title":"API Reference","permalink":"/react-native-video/docs/v7/api-reference/"}}'),a=i(5893),o=i(980);let t={sidebar_position:2,sidebar_label:"Manual Configuration",description:"Manual configuration of react-native-video"},d="Manual Configuration",s={},l=[{value:"iOS",id:"ios",level:2},{value:"Enable Background Audio",id:"enable-background-audio",level:3},{value:"Android",id:"android",level:2},{value:"Configure ExoPlayer extensions",id:"configure-exoplayer-extensions",level:3},{value:"Enable Picture-in-Picture (PiP)",id:"enable-picture-in-picture-pip",level:3},{value:"Verification",id:"verification",level:2},{value:"Need an easier way?",id:"need-an-easier-way",level:3}];function c(e){let n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"manual-configuration",children:"Manual Configuration"})}),"\n",(0,a.jsxs)(n.p,{children:["If you prefer not to use the Expo plugin you can configure ",(0,a.jsx)(n.strong,{children:"react-native-video"})," manually by editing the native project files directly.  The steps below show the exact changes performed by the plugin so you can reproduce them in a plain React Native or bare Expo project."]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"ios",children:"iOS"}),"\n",(0,a.jsx)(n.h3,{id:"enable-background-audio",children:"Enable Background Audio"}),"\n",(0,a.jsxs)(n.p,{children:["To allow video sound to continue when the app goes to the background add the ",(0,a.jsx)(n.code,{children:"audio"})," mode to ",(0,a.jsx)(n.code,{children:"Info.plist"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-xml",metastring:'title="ios/YourApp/Info.plist"',children:"<key>UIBackgroundModes</key>\n<array>\n  <string>audio</string>\n</array>\n"})}),"\n",(0,a.jsx)(n.h2,{id:"android",children:"Android"}),"\n",(0,a.jsx)(n.h3,{id:"configure-exoplayer-extensions",children:"Configure ExoPlayer extensions"}),"\n",(0,a.jsxs)(n.p,{children:["By default the library enables DASH & HLS extensions.  You can fine-tune this by adding properties to ",(0,a.jsx)(n.strong,{children:"gradle.properties"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-properties",metastring:'title="android/gradle.properties"',children:"# Enable / disable ExoPlayer extensions used by react-native-video\nRNVideo_useExoplayerDash=true   # DASH playback support\nRNVideo_useExoplayerHls=true    # HLS  playback support\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Set a value to ",(0,a.jsx)(n.code,{children:"false"})," to exclude the corresponding extension and reduce APK size."]}),"\n",(0,a.jsx)(n.h3,{id:"enable-picture-in-picture-pip",children:"Enable Picture-in-Picture (PiP)"}),"\n",(0,a.jsxs)(n.p,{children:["Add the ",(0,a.jsx)(n.code,{children:"android:supportsPictureInPicture"})," flag to your ",(0,a.jsx)(n.em,{children:"main"})," activity in ",(0,a.jsx)(n.strong,{children:"AndroidManifest.xml"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-xml",metastring:'title="android/app/src/main/AndroidManifest.xml"',children:'<application>\n  <activity\n    android:name=".MainActivity"\n    android:supportsPictureInPicture="true"\n    ...>\n    \x3c!-- other attributes --\x3e\n  </activity>\n</application>\n'})}),"\n",(0,a.jsxs)(n.p,{children:["PiP requires ",(0,a.jsx)(n.strong,{children:"API 26+"})," (Android 8.0). Make sure ",(0,a.jsx)(n.code,{children:"minSdkVersion"})," is at least ",(0,a.jsx)(n.code,{children:"26"})," when enabling this feature."]}),"\n",(0,a.jsx)(n.h2,{id:"verification",children:"Verification"}),"\n",(0,a.jsx)(n.p,{children:"After the modifications:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"iOS"})," \u2013 run ",(0,a.jsx)(n.code,{children:"cd ios && pod install"})," then build the app from Xcode or via ",(0,a.jsx)(n.code,{children:"npx react-native run-ios"})," / ",(0,a.jsx)(n.code,{children:"npx expo run:ios"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Android"})," \u2013 clean & rebuild the project: ",(0,a.jsx)(n.code,{children:"./gradlew clean && ./gradlew :app:assembleDebug"})," or simply run ",(0,a.jsx)(n.code,{children:"npx react-native run-android"})," / ",(0,a.jsx)(n.code,{children:"npx expo run:android"}),"."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"If the build succeeds your manual configuration is complete."}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h3,{id:"need-an-easier-way",children:"Need an easier way?"}),"\n",(0,a.jsxs)(n.p,{children:["Use the ",(0,a.jsx)(n.a,{href:"/react-native-video/docs/v7/configuration/expo-plugin",children:"Expo plugin"})," to apply exactly the same changes automatically during ",(0,a.jsx)(n.code,{children:"expo prebuild"}),"."]})]})}function u(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},980:function(e,n,i){i.d(n,{Z:()=>d,a:()=>t});var r=i(7294);let a={},o=r.createContext(a);function t(e){let n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);