"use strict";(self.webpackChunk_react_native_video_docs=self.webpackChunk_react_native_video_docs||[]).push([["3078"],{9970:function(e,n,i){i.r(n),i.d(n,{frontMatter:()=>o,default:()=>h,toc:()=>a,metadata:()=>s,assets:()=>r,contentTitle:()=>d});var s=JSON.parse('{"id":"other/caching","title":"Caching","description":"React Native Video Caching Integration","source":"@site/versioned_docs/version-6.x/other/caching.md","sourceDirName":"other","slug":"/other/caching","permalink":"/react-native-video/docs/v6/other/caching","draft":false,"unlisted":false,"tags":[],"version":"6.x","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"Caching","description":"React Native Video Caching Integration"},"sidebar":"docsSidebar","previous":{"title":"Debugging","permalink":"/react-native-video/docs/v6/other/debug"},"next":{"title":"Downloading","permalink":"/react-native-video/docs/v6/other/downloading"}}'),t=i(5893),c=i(980);let o={sidebar_position:3,title:"Caching",description:"React Native Video Caching Integration"},d="Caching",r={},a=[{value:"Android",id:"android",level:2},{value:"iOS",id:"ios",level:2},{value:"Technology",id:"technology",level:3},{value:"How It Works",id:"how-it-works",level:3},{value:"Restrictions",id:"restrictions",level:3}];function l(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,c.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"caching",children:"Caching"})}),"\n",(0,t.jsxs)(n.p,{children:["Caching is supported on ",(0,t.jsx)(n.code,{children:"iOS"})," platforms with a CocoaPods setup and on ",(0,t.jsx)(n.code,{children:"Android"})," using ",(0,t.jsx)(n.code,{children:"SimpleCache"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"android",children:"Android"}),"\n",(0,t.jsxs)(n.p,{children:["Android uses an LRU ",(0,t.jsx)(n.code,{children:"SimpleCache"})," with a variable cache size, which can be specified by ",(0,t.jsx)(n.code,{children:"bufferConfig - cacheSizeMB"}),". This creates a folder named ",(0,t.jsx)(n.code,{children:"RNVCache"})," inside the app's ",(0,t.jsx)(n.code,{children:"cache"})," directory."]}),"\n",(0,t.jsxs)(n.p,{children:["Note that ",(0,t.jsx)(n.code,{children:"react-native-video"})," does not currently offer a native method to flush the cache, but it can be cleared by manually clearing the app's cache."]}),"\n",(0,t.jsx)(n.p,{children:"Additionally, this resolves the issue in RNV6 where the source URI was repeatedly called when looping a video on Android."}),"\n",(0,t.jsx)(n.h2,{id:"ios",children:"iOS"}),"\n",(0,t.jsx)(n.h3,{id:"technology",children:"Technology"}),"\n",(0,t.jsxs)(n.p,{children:["The cache is backed by ",(0,t.jsx)(n.a,{href:"https://github.com/spotify/SPTPersistentCache",children:"SPTPersistentCache"})," and ",(0,t.jsx)(n.a,{href:"https://github.com/vdugnist/DVAssetLoaderDelegate",children:"DVAssetLoaderDelegate"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"how-it-works",children:"How It Works"}),"\n",(0,t.jsxs)(n.p,{children:["Caching is based on the asset's URL. ",(0,t.jsx)(n.code,{children:"SPTPersistentCache"})," uses an LRU (",(0,t.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Cache_replacement_policies#Least_recently_used_(LRU)",children:"Least Recently Used"}),") caching policy."]}),"\n",(0,t.jsx)(n.h3,{id:"restrictions",children:"Restrictions"}),"\n",(0,t.jsxs)(n.p,{children:["Currently, caching is only supported for URLs ending in ",(0,t.jsx)(n.code,{children:".mp4"}),", ",(0,t.jsx)(n.code,{children:".m4v"}),", or ",(0,t.jsx)(n.code,{children:".mov"}),". In future versions, URLs with query strings (e.g., ",(0,t.jsx)(n.code,{children:"test.mp4?resolution=480p"}),") will be supported once dependencies allow access to the ",(0,t.jsx)(n.code,{children:"Content-Type"})," header."]}),"\n",(0,t.jsxs)(n.p,{children:["At this time, HLS playlists (",(0,t.jsx)(n.code,{children:".m3u8"}),") and videos with sideloaded text tracks are not supported and will bypass the cache."]}),"\n",(0,t.jsxs)(n.p,{children:["You will see warnings in the Xcode logs when using ",(0,t.jsx)(n.code,{children:"debug"})," mode. If you're unsure whether your video is cached, check your Xcode logs."]}),"\n",(0,t.jsx)(n.p,{children:"By default, files expire after 30 days, and the maximum cache size is 100MB."}),"\n",(0,t.jsx)(n.p,{children:"Future updates may include more configurable caching options."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note:"})," If you are enabling video caching (using ",(0,t.jsx)(n.code,{children:"$RNVideoUseVideoCaching"}),"), you must add the following to your ",(0,t.jsx)(n.code,{children:"Gemfile"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:'gem "cocoapods-swift-modular-headers"\n'})}),"\n",(0,t.jsx)(n.p,{children:"Then, install dependencies using:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"bundle install\nbundle exec pod install\n"})}),"\n",(0,t.jsx)(n.p,{children:"This enables Swift modular headers for Swift dependencies."}),"\n"]})]})}function h(e={}){let{wrapper:n}={...(0,c.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},980:function(e,n,i){i.d(n,{Z:()=>d,a:()=>o});var s=i(7294);let t={},c=s.createContext(t);function o(e){let n=s.useContext(c);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(c.Provider,{value:n},e.children)}}}]);