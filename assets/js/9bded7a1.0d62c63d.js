"use strict";(self.webpackChunk_react_native_video_docs=self.webpackChunk_react_native_video_docs||[]).push([["2702"],{6720:function(e,t,i){i.r(t),i.d(t,{frontMatter:()=>s,default:()=>p,toc:()=>l,metadata:()=>n,assets:()=>c,contentTitle:()=>o});var n=JSON.parse('{"id":"api-reference/type-aliases/ResizeMode","title":"Type Alias: ResizeMode","description":"Defined in9","source":"@site/docs/api-reference/type-aliases/ResizeMode.md","sourceDirName":"api-reference/type-aliases","slug":"/api-reference/type-aliases/ResizeMode","permalink":"/react-native-video/docs/v7/api-reference/type-aliases/ResizeMode","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Type Alias: PlayerError","permalink":"/react-native-video/docs/v7/api-reference/type-aliases/PlayerError"},"next":{"title":"Type Alias: SourceError","permalink":"/react-native-video/docs/v7/api-reference/type-aliases/SourceError"}}'),r=i(5893),a=i(980);let s={},o="Type Alias: ResizeMode",c={},l=[];function d(e){let t={a:"a",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"type-alias-resizemode",children:"Type Alias: ResizeMode"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:'type ResizeMode = "contain" | "cover" | "stretch" | "none";\n'})}),"\n",(0,r.jsxs)(t.p,{children:["Defined in: ",(0,r.jsx)(t.a,{href:"https://github.com/TheWidlarzGroup/react-native-video/blob/8507cf699397b324a56722d218803cf71900092f/packages/react-native-video/src/core/types/ResizeMode.ts#L9",children:"types/ResizeMode.ts:9"})]}),"\n",(0,r.jsx)(t.p,{children:"Video resize modes that determine how video content is resized to fit the view"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"'contain': Scale the video uniformly (maintain aspect ratio) so that it fits entirely within the view"}),"\n",(0,r.jsx)(t.li,{children:"'cover': Scale the video uniformly (maintain aspect ratio) so that it fills the entire view (may crop)"}),"\n",(0,r.jsx)(t.li,{children:"'stretch': Scale the video to fill the entire view without maintaining aspect ratio"}),"\n",(0,r.jsx)(t.li,{children:"'none': Do not resize the video - it will fallback to default behavior (contain)"}),"\n"]})]})}function p(e={}){let{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},980:function(e,t,i){i.d(t,{Z:()=>o,a:()=>s});var n=i(7294);let r={},a=n.createContext(r);function s(e){let t=n.useContext(a);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);