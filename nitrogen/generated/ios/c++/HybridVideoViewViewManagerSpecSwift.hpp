///
/// HybridVideoViewViewManagerSpecSwift.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#pragma once

#include "HybridVideoViewViewManagerSpec.hpp"

// Forward declaration of `HybridVideoViewViewManagerSpecCxx` to properly resolve imports.
namespace NitroVideo { class HybridVideoViewViewManagerSpecCxx; }

// Forward declaration of `HybridVideoPlayerSpec` to properly resolve imports.
namespace margelo::nitro::video { class HybridVideoPlayerSpec; }

#include <optional>
#include <memory>
#include "HybridVideoPlayerSpec.hpp"

#if __has_include(<NitroModules/HybridContext.hpp>)
#include <NitroModules/HybridContext.hpp>
#else
#error NitroModules cannot be found! Are you sure you installed NitroModules properly?
#endif

#include "NitroVideo-Swift-Cxx-Umbrella.hpp"

namespace margelo::nitro::video {

  /**
   * The C++ part of HybridVideoViewViewManagerSpecCxx.swift.
   *
   * HybridVideoViewViewManagerSpecSwift (C++) accesses HybridVideoViewViewManagerSpecCxx (Swift), and might
   * contain some additional bridging code for C++ <> Swift interop.
   *
   * Since this obviously introduces an overhead, I hope at some point in
   * the future, HybridVideoViewViewManagerSpecCxx can directly inherit from the C++ class HybridVideoViewViewManagerSpec
   * to simplify the whole structure and memory management.
   */
  class HybridVideoViewViewManagerSpecSwift: public virtual HybridVideoViewViewManagerSpec {
  public:
    // Constructor from a Swift instance
    explicit HybridVideoViewViewManagerSpecSwift(const NitroVideo::HybridVideoViewViewManagerSpecCxx& swiftPart):
      HybridObject(HybridVideoViewViewManagerSpec::TAG),
      _swiftPart(swiftPart) { }

  public:
    // Get the Swift part
    inline NitroVideo::HybridVideoViewViewManagerSpecCxx getSwiftPart() noexcept { return _swiftPart; }

  public:
    // Get memory pressure
    inline size_t getExternalMemorySize() noexcept override {
      return _swiftPart.getMemorySize();
    }

  public:
    // Properties
    inline std::optional<std::shared_ptr<margelo::nitro::video::HybridVideoPlayerSpec>> getPlayer() noexcept override {
      auto __result = _swiftPart.getPlayer();
      return __result;
    }
    inline void setPlayer(const std::optional<std::shared_ptr<margelo::nitro::video::HybridVideoPlayerSpec>>& player) noexcept override {
      _swiftPart.setPlayer(player);
    }

  public:
    // Methods
    

  private:
    NitroVideo::HybridVideoViewViewManagerSpecCxx _swiftPart;
  };

} // namespace margelo::nitro::video
