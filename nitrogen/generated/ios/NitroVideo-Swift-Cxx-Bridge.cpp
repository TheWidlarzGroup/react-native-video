///
/// NitroVideo-Swift-Cxx-Bridge.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#include "NitroVideo-Swift-Cxx-Bridge.hpp"

// Include C++ implementation defined types
#include "HybridVideoPlayerFactorySpecSwift.hpp"
#include "HybridVideoPlayerSourceFactorySpecSwift.hpp"
#include "HybridVideoPlayerSourceSpecSwift.hpp"
#include "HybridVideoPlayerSpecSwift.hpp"
#include "HybridVideoViewViewManagerFactorySpecSwift.hpp"
#include "HybridVideoViewViewManagerSpecSwift.hpp"
#include "NitroVideo-Swift-Cxx-Umbrella.hpp"
#include <NitroModules/HybridContext.hpp>

namespace margelo::nitro::video::bridge::swift {

  // pragma MARK: std::shared_ptr<margelo::nitro::video::HybridVideoPlayerSourceSpec>
  std::shared_ptr<margelo::nitro::video::HybridVideoPlayerSourceSpec> create_std__shared_ptr_margelo__nitro__video__HybridVideoPlayerSourceSpec_(void* NONNULL swiftUnsafePointer) {
    NitroVideo::HybridVideoPlayerSourceSpecCxx swiftPart = NitroVideo::HybridVideoPlayerSourceSpecCxxUnsafe::fromUnsafe(swiftUnsafePointer);
    return HybridContext::getOrCreate<margelo::nitro::video::HybridVideoPlayerSourceSpecSwift>(swiftPart);
  }
  void* NONNULL get_std__shared_ptr_margelo__nitro__video__HybridVideoPlayerSourceSpec_(std__shared_ptr_margelo__nitro__video__HybridVideoPlayerSourceSpec_ cppType) {
    std::shared_ptr<margelo::nitro::video::HybridVideoPlayerSourceSpecSwift> swiftWrapper = std::dynamic_pointer_cast<margelo::nitro::video::HybridVideoPlayerSourceSpecSwift>(cppType);
  #ifdef NITRO_DEBUG
    if (swiftWrapper == nullptr) [[unlikely]] {
      throw std::runtime_error("Class \"HybridVideoPlayerSourceSpec\" is not implemented in Swift!");
    }
  #endif
    NitroVideo::HybridVideoPlayerSourceSpecCxx swiftPart = swiftWrapper->getSwiftPart();
    return NitroVideo::HybridVideoPlayerSourceSpecCxxUnsafe::toUnsafe(swiftPart);
  }
  
  // pragma MARK: std::shared_ptr<margelo::nitro::video::HybridVideoPlayerSpec>
  std::shared_ptr<margelo::nitro::video::HybridVideoPlayerSpec> create_std__shared_ptr_margelo__nitro__video__HybridVideoPlayerSpec_(void* NONNULL swiftUnsafePointer) {
    NitroVideo::HybridVideoPlayerSpecCxx swiftPart = NitroVideo::HybridVideoPlayerSpecCxxUnsafe::fromUnsafe(swiftUnsafePointer);
    return HybridContext::getOrCreate<margelo::nitro::video::HybridVideoPlayerSpecSwift>(swiftPart);
  }
  void* NONNULL get_std__shared_ptr_margelo__nitro__video__HybridVideoPlayerSpec_(std__shared_ptr_margelo__nitro__video__HybridVideoPlayerSpec_ cppType) {
    std::shared_ptr<margelo::nitro::video::HybridVideoPlayerSpecSwift> swiftWrapper = std::dynamic_pointer_cast<margelo::nitro::video::HybridVideoPlayerSpecSwift>(cppType);
  #ifdef NITRO_DEBUG
    if (swiftWrapper == nullptr) [[unlikely]] {
      throw std::runtime_error("Class \"HybridVideoPlayerSpec\" is not implemented in Swift!");
    }
  #endif
    NitroVideo::HybridVideoPlayerSpecCxx swiftPart = swiftWrapper->getSwiftPart();
    return NitroVideo::HybridVideoPlayerSpecCxxUnsafe::toUnsafe(swiftPart);
  }
  
  // pragma MARK: std::shared_ptr<margelo::nitro::video::HybridVideoPlayerFactorySpec>
  std::shared_ptr<margelo::nitro::video::HybridVideoPlayerFactorySpec> create_std__shared_ptr_margelo__nitro__video__HybridVideoPlayerFactorySpec_(void* NONNULL swiftUnsafePointer) {
    NitroVideo::HybridVideoPlayerFactorySpecCxx swiftPart = NitroVideo::HybridVideoPlayerFactorySpecCxxUnsafe::fromUnsafe(swiftUnsafePointer);
    return HybridContext::getOrCreate<margelo::nitro::video::HybridVideoPlayerFactorySpecSwift>(swiftPart);
  }
  void* NONNULL get_std__shared_ptr_margelo__nitro__video__HybridVideoPlayerFactorySpec_(std__shared_ptr_margelo__nitro__video__HybridVideoPlayerFactorySpec_ cppType) {
    std::shared_ptr<margelo::nitro::video::HybridVideoPlayerFactorySpecSwift> swiftWrapper = std::dynamic_pointer_cast<margelo::nitro::video::HybridVideoPlayerFactorySpecSwift>(cppType);
  #ifdef NITRO_DEBUG
    if (swiftWrapper == nullptr) [[unlikely]] {
      throw std::runtime_error("Class \"HybridVideoPlayerFactorySpec\" is not implemented in Swift!");
    }
  #endif
    NitroVideo::HybridVideoPlayerFactorySpecCxx swiftPart = swiftWrapper->getSwiftPart();
    return NitroVideo::HybridVideoPlayerFactorySpecCxxUnsafe::toUnsafe(swiftPart);
  }
  
  // pragma MARK: std::shared_ptr<margelo::nitro::video::HybridVideoPlayerSourceFactorySpec>
  std::shared_ptr<margelo::nitro::video::HybridVideoPlayerSourceFactorySpec> create_std__shared_ptr_margelo__nitro__video__HybridVideoPlayerSourceFactorySpec_(void* NONNULL swiftUnsafePointer) {
    NitroVideo::HybridVideoPlayerSourceFactorySpecCxx swiftPart = NitroVideo::HybridVideoPlayerSourceFactorySpecCxxUnsafe::fromUnsafe(swiftUnsafePointer);
    return HybridContext::getOrCreate<margelo::nitro::video::HybridVideoPlayerSourceFactorySpecSwift>(swiftPart);
  }
  void* NONNULL get_std__shared_ptr_margelo__nitro__video__HybridVideoPlayerSourceFactorySpec_(std__shared_ptr_margelo__nitro__video__HybridVideoPlayerSourceFactorySpec_ cppType) {
    std::shared_ptr<margelo::nitro::video::HybridVideoPlayerSourceFactorySpecSwift> swiftWrapper = std::dynamic_pointer_cast<margelo::nitro::video::HybridVideoPlayerSourceFactorySpecSwift>(cppType);
  #ifdef NITRO_DEBUG
    if (swiftWrapper == nullptr) [[unlikely]] {
      throw std::runtime_error("Class \"HybridVideoPlayerSourceFactorySpec\" is not implemented in Swift!");
    }
  #endif
    NitroVideo::HybridVideoPlayerSourceFactorySpecCxx swiftPart = swiftWrapper->getSwiftPart();
    return NitroVideo::HybridVideoPlayerSourceFactorySpecCxxUnsafe::toUnsafe(swiftPart);
  }
  
  // pragma MARK: std::shared_ptr<margelo::nitro::video::HybridVideoViewViewManagerSpec>
  std::shared_ptr<margelo::nitro::video::HybridVideoViewViewManagerSpec> create_std__shared_ptr_margelo__nitro__video__HybridVideoViewViewManagerSpec_(void* NONNULL swiftUnsafePointer) {
    NitroVideo::HybridVideoViewViewManagerSpecCxx swiftPart = NitroVideo::HybridVideoViewViewManagerSpecCxxUnsafe::fromUnsafe(swiftUnsafePointer);
    return HybridContext::getOrCreate<margelo::nitro::video::HybridVideoViewViewManagerSpecSwift>(swiftPart);
  }
  void* NONNULL get_std__shared_ptr_margelo__nitro__video__HybridVideoViewViewManagerSpec_(std__shared_ptr_margelo__nitro__video__HybridVideoViewViewManagerSpec_ cppType) {
    std::shared_ptr<margelo::nitro::video::HybridVideoViewViewManagerSpecSwift> swiftWrapper = std::dynamic_pointer_cast<margelo::nitro::video::HybridVideoViewViewManagerSpecSwift>(cppType);
  #ifdef NITRO_DEBUG
    if (swiftWrapper == nullptr) [[unlikely]] {
      throw std::runtime_error("Class \"HybridVideoViewViewManagerSpec\" is not implemented in Swift!");
    }
  #endif
    NitroVideo::HybridVideoViewViewManagerSpecCxx swiftPart = swiftWrapper->getSwiftPart();
    return NitroVideo::HybridVideoViewViewManagerSpecCxxUnsafe::toUnsafe(swiftPart);
  }
  
  // pragma MARK: std::shared_ptr<margelo::nitro::video::HybridVideoViewViewManagerFactorySpec>
  std::shared_ptr<margelo::nitro::video::HybridVideoViewViewManagerFactorySpec> create_std__shared_ptr_margelo__nitro__video__HybridVideoViewViewManagerFactorySpec_(void* NONNULL swiftUnsafePointer) {
    NitroVideo::HybridVideoViewViewManagerFactorySpecCxx swiftPart = NitroVideo::HybridVideoViewViewManagerFactorySpecCxxUnsafe::fromUnsafe(swiftUnsafePointer);
    return HybridContext::getOrCreate<margelo::nitro::video::HybridVideoViewViewManagerFactorySpecSwift>(swiftPart);
  }
  void* NONNULL get_std__shared_ptr_margelo__nitro__video__HybridVideoViewViewManagerFactorySpec_(std__shared_ptr_margelo__nitro__video__HybridVideoViewViewManagerFactorySpec_ cppType) {
    std::shared_ptr<margelo::nitro::video::HybridVideoViewViewManagerFactorySpecSwift> swiftWrapper = std::dynamic_pointer_cast<margelo::nitro::video::HybridVideoViewViewManagerFactorySpecSwift>(cppType);
  #ifdef NITRO_DEBUG
    if (swiftWrapper == nullptr) [[unlikely]] {
      throw std::runtime_error("Class \"HybridVideoViewViewManagerFactorySpec\" is not implemented in Swift!");
    }
  #endif
    NitroVideo::HybridVideoViewViewManagerFactorySpecCxx swiftPart = swiftWrapper->getSwiftPart();
    return NitroVideo::HybridVideoViewViewManagerFactorySpecCxxUnsafe::toUnsafe(swiftPart);
  }

} // namespace margelo::nitro::video::bridge::swift
