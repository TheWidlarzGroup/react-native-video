///
/// NitroVideo-Swift-Cxx-Bridge.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#pragma once

// Forward declarations of C++ defined types
// Forward declaration of `HybridVideoPlayerFactorySpec` to properly resolve imports.
namespace margelo::nitro::video { class HybridVideoPlayerFactorySpec; }
// Forward declaration of `HybridVideoPlayerSourceFactorySpec` to properly resolve imports.
namespace margelo::nitro::video { class HybridVideoPlayerSourceFactorySpec; }
// Forward declaration of `HybridVideoPlayerSourceSpec` to properly resolve imports.
namespace margelo::nitro::video { class HybridVideoPlayerSourceSpec; }
// Forward declaration of `HybridVideoPlayerSpec` to properly resolve imports.
namespace margelo::nitro::video { class HybridVideoPlayerSpec; }
// Forward declaration of `HybridVideoViewViewManagerFactorySpec` to properly resolve imports.
namespace margelo::nitro::video { class HybridVideoViewViewManagerFactorySpec; }
// Forward declaration of `HybridVideoViewViewManagerSpec` to properly resolve imports.
namespace margelo::nitro::video { class HybridVideoViewViewManagerSpec; }

// Forward declarations of Swift defined types
// Forward declaration of `HybridVideoPlayerFactorySpecCxx` to properly resolve imports.
namespace NitroVideo { class HybridVideoPlayerFactorySpecCxx; }
// Forward declaration of `HybridVideoPlayerSourceFactorySpecCxx` to properly resolve imports.
namespace NitroVideo { class HybridVideoPlayerSourceFactorySpecCxx; }
// Forward declaration of `HybridVideoPlayerSourceSpecCxx` to properly resolve imports.
namespace NitroVideo { class HybridVideoPlayerSourceSpecCxx; }
// Forward declaration of `HybridVideoPlayerSpecCxx` to properly resolve imports.
namespace NitroVideo { class HybridVideoPlayerSpecCxx; }
// Forward declaration of `HybridVideoViewViewManagerFactorySpecCxx` to properly resolve imports.
namespace NitroVideo { class HybridVideoViewViewManagerFactorySpecCxx; }
// Forward declaration of `HybridVideoViewViewManagerSpecCxx` to properly resolve imports.
namespace NitroVideo { class HybridVideoViewViewManagerSpecCxx; }

// Include C++ defined types
#include "HybridVideoPlayerFactorySpec.hpp"
#include "HybridVideoPlayerSourceFactorySpec.hpp"
#include "HybridVideoPlayerSourceSpec.hpp"
#include "HybridVideoPlayerSpec.hpp"
#include "HybridVideoViewViewManagerFactorySpec.hpp"
#include "HybridVideoViewViewManagerSpec.hpp"
#include <memory>
#include <optional>

/**
 * Contains specialized versions of C++ templated types so they can be accessed from Swift,
 * as well as helper functions to interact with those C++ types from Swift.
 */
namespace margelo::nitro::video::bridge::swift {

  // pragma MARK: std::shared_ptr<margelo::nitro::video::HybridVideoPlayerSourceSpec>
  /**
   * Specialized version of `std::shared_ptr<margelo::nitro::video::HybridVideoPlayerSourceSpec>`.
   */
  using std__shared_ptr_margelo__nitro__video__HybridVideoPlayerSourceSpec_ = std::shared_ptr<margelo::nitro::video::HybridVideoPlayerSourceSpec>;
  std::shared_ptr<margelo::nitro::video::HybridVideoPlayerSourceSpec> create_std__shared_ptr_margelo__nitro__video__HybridVideoPlayerSourceSpec_(void* _Nonnull swiftUnsafePointer);
  void* _Nonnull get_std__shared_ptr_margelo__nitro__video__HybridVideoPlayerSourceSpec_(std__shared_ptr_margelo__nitro__video__HybridVideoPlayerSourceSpec_ cppType);
  
  // pragma MARK: std::shared_ptr<margelo::nitro::video::HybridVideoPlayerSpec>
  /**
   * Specialized version of `std::shared_ptr<margelo::nitro::video::HybridVideoPlayerSpec>`.
   */
  using std__shared_ptr_margelo__nitro__video__HybridVideoPlayerSpec_ = std::shared_ptr<margelo::nitro::video::HybridVideoPlayerSpec>;
  std::shared_ptr<margelo::nitro::video::HybridVideoPlayerSpec> create_std__shared_ptr_margelo__nitro__video__HybridVideoPlayerSpec_(void* _Nonnull swiftUnsafePointer);
  void* _Nonnull get_std__shared_ptr_margelo__nitro__video__HybridVideoPlayerSpec_(std__shared_ptr_margelo__nitro__video__HybridVideoPlayerSpec_ cppType);
  
  // pragma MARK: std::shared_ptr<margelo::nitro::video::HybridVideoPlayerFactorySpec>
  /**
   * Specialized version of `std::shared_ptr<margelo::nitro::video::HybridVideoPlayerFactorySpec>`.
   */
  using std__shared_ptr_margelo__nitro__video__HybridVideoPlayerFactorySpec_ = std::shared_ptr<margelo::nitro::video::HybridVideoPlayerFactorySpec>;
  std::shared_ptr<margelo::nitro::video::HybridVideoPlayerFactorySpec> create_std__shared_ptr_margelo__nitro__video__HybridVideoPlayerFactorySpec_(void* _Nonnull swiftUnsafePointer);
  void* _Nonnull get_std__shared_ptr_margelo__nitro__video__HybridVideoPlayerFactorySpec_(std__shared_ptr_margelo__nitro__video__HybridVideoPlayerFactorySpec_ cppType);
  
  // pragma MARK: std::shared_ptr<margelo::nitro::video::HybridVideoPlayerSourceFactorySpec>
  /**
   * Specialized version of `std::shared_ptr<margelo::nitro::video::HybridVideoPlayerSourceFactorySpec>`.
   */
  using std__shared_ptr_margelo__nitro__video__HybridVideoPlayerSourceFactorySpec_ = std::shared_ptr<margelo::nitro::video::HybridVideoPlayerSourceFactorySpec>;
  std::shared_ptr<margelo::nitro::video::HybridVideoPlayerSourceFactorySpec> create_std__shared_ptr_margelo__nitro__video__HybridVideoPlayerSourceFactorySpec_(void* _Nonnull swiftUnsafePointer);
  void* _Nonnull get_std__shared_ptr_margelo__nitro__video__HybridVideoPlayerSourceFactorySpec_(std__shared_ptr_margelo__nitro__video__HybridVideoPlayerSourceFactorySpec_ cppType);
  
  // pragma MARK: std::optional<std::shared_ptr<margelo::nitro::video::HybridVideoPlayerSpec>>
  /**
   * Specialized version of `std::optional<std::shared_ptr<margelo::nitro::video::HybridVideoPlayerSpec>>`.
   */
  using std__optional_std__shared_ptr_margelo__nitro__video__HybridVideoPlayerSpec__ = std::optional<std::shared_ptr<margelo::nitro::video::HybridVideoPlayerSpec>>;
  inline std::optional<std::shared_ptr<margelo::nitro::video::HybridVideoPlayerSpec>> create_std__optional_std__shared_ptr_margelo__nitro__video__HybridVideoPlayerSpec__(const std::shared_ptr<margelo::nitro::video::HybridVideoPlayerSpec>& value) {
    return std::optional<std::shared_ptr<margelo::nitro::video::HybridVideoPlayerSpec>>(value);
  }
  
  // pragma MARK: std::shared_ptr<margelo::nitro::video::HybridVideoViewViewManagerSpec>
  /**
   * Specialized version of `std::shared_ptr<margelo::nitro::video::HybridVideoViewViewManagerSpec>`.
   */
  using std__shared_ptr_margelo__nitro__video__HybridVideoViewViewManagerSpec_ = std::shared_ptr<margelo::nitro::video::HybridVideoViewViewManagerSpec>;
  std::shared_ptr<margelo::nitro::video::HybridVideoViewViewManagerSpec> create_std__shared_ptr_margelo__nitro__video__HybridVideoViewViewManagerSpec_(void* _Nonnull swiftUnsafePointer);
  void* _Nonnull get_std__shared_ptr_margelo__nitro__video__HybridVideoViewViewManagerSpec_(std__shared_ptr_margelo__nitro__video__HybridVideoViewViewManagerSpec_ cppType);
  
  // pragma MARK: std::shared_ptr<margelo::nitro::video::HybridVideoViewViewManagerFactorySpec>
  /**
   * Specialized version of `std::shared_ptr<margelo::nitro::video::HybridVideoViewViewManagerFactorySpec>`.
   */
  using std__shared_ptr_margelo__nitro__video__HybridVideoViewViewManagerFactorySpec_ = std::shared_ptr<margelo::nitro::video::HybridVideoViewViewManagerFactorySpec>;
  std::shared_ptr<margelo::nitro::video::HybridVideoViewViewManagerFactorySpec> create_std__shared_ptr_margelo__nitro__video__HybridVideoViewViewManagerFactorySpec_(void* _Nonnull swiftUnsafePointer);
  void* _Nonnull get_std__shared_ptr_margelo__nitro__video__HybridVideoViewViewManagerFactorySpec_(std__shared_ptr_margelo__nitro__video__HybridVideoViewViewManagerFactorySpec_ cppType);

} // namespace margelo::nitro::video::bridge::swift
