///
/// NitroVideoAutolinking.mm
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#import <Foundation/Foundation.h>
#import <NitroModules/HybridObjectRegistry.hpp>
#import "NitroVideo-Swift-Cxx-Umbrella.hpp"
#import <type_traits>

#include "HybridVideoPlayerFactorySpecSwift.hpp"
#include "HybridVideoPlayerSourceFactorySpecSwift.hpp"
#include "HybridVideoViewViewManagerFactorySpecSwift.hpp"

@interface NitroVideoAutolinking : NSObject
@end

@implementation NitroVideoAutolinking

+ (void) load {
  using namespace margelo::nitro;
  using namespace margelo::nitro::video;

  HybridObjectRegistry::registerHybridObjectConstructor(
    "VideoPlayerFactory",
    []() -> std::shared_ptr<HybridObject> {
      std::shared_ptr<margelo::nitro::video::HybridVideoPlayerFactorySpec> hybridObject = NitroVideo::NitroVideoAutolinking::createVideoPlayerFactory();
      return hybridObject;
    }
  );
  HybridObjectRegistry::registerHybridObjectConstructor(
    "VideoPlayerSourceFactory",
    []() -> std::shared_ptr<HybridObject> {
      std::shared_ptr<margelo::nitro::video::HybridVideoPlayerSourceFactorySpec> hybridObject = NitroVideo::NitroVideoAutolinking::createVideoPlayerSourceFactory();
      return hybridObject;
    }
  );
  HybridObjectRegistry::registerHybridObjectConstructor(
    "VideoViewViewManagerFactory",
    []() -> std::shared_ptr<HybridObject> {
      std::shared_ptr<margelo::nitro::video::HybridVideoViewViewManagerFactorySpec> hybridObject = NitroVideo::NitroVideoAutolinking::createVideoViewViewManagerFactory();
      return hybridObject;
    }
  );
}

@end
