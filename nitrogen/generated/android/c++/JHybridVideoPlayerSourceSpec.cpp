///
/// JHybridVideoPlayerSourceSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#include "JHybridVideoPlayerSourceSpec.hpp"



#include <string>

namespace margelo::nitro::video {

  jni::local_ref<JHybridVideoPlayerSourceSpec::jhybriddata> JHybridVideoPlayerSourceSpec::initHybrid(jni::alias_ref<jhybridobject> jThis) {
    return makeCxxInstance(jThis);
  }

  void JHybridVideoPlayerSourceSpec::registerNatives() {
    registerHybrid({
      makeNativeMethod("initHybrid", JHybridVideoPlayerSourceSpec::initHybrid),
    });
  }

  size_t JHybridVideoPlayerSourceSpec::getExternalMemorySize() noexcept {
    static const auto method = _javaPart->getClass()->getMethod<jlong()>("getMemorySize");
    return method(_javaPart);
  }

  // Properties
  std::string JHybridVideoPlayerSourceSpec::getUri() {
    static const auto method = _javaPart->getClass()->getMethod<jni::local_ref<jni::JString>()>("getUri");
    auto __result = method(_javaPart);
    return __result->toStdString();
  }
  void JHybridVideoPlayerSourceSpec::setUri(const std::string& uri) {
    static const auto method = _javaPart->getClass()->getMethod<void(jni::alias_ref<jni::JString> /* uri */)>("setUri");
    method(_javaPart, jni::make_jstring(uri));
  }

  // Methods
  

} // namespace margelo::nitro::video
