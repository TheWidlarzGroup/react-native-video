///
/// ReactNativeVideoAutolinking.mm
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#import <Foundation/Foundation.h>
#import <NitroModules/HybridObjectRegistry.hpp>
#import "ReactNativeVideo-Swift-Cxx-Umbrella.hpp"
#import <type_traits>

#include "HybridVideoPlayerFactorySpecSwift.hpp"
#include "HybridVideoPlayerSourceFactorySpecSwift.hpp"
#include "HybridVideoViewViewManagerFactorySpecSwift.hpp"

@interface ReactNativeVideoAutolinking : NSObject
@end

@implementation ReactNativeVideoAutolinking

+ (void) load {
  using namespace margelo::nitro;
  using namespace margelo::nitro::video;

  HybridObjectRegistry::registerHybridObjectConstructor(
    "VideoPlayerFactory",
    []() -> std::shared_ptr<HybridObject> {
      std::shared_ptr<HybridVideoPlayerFactorySpec> hybridObject = ReactNativeVideo::ReactNativeVideoAutolinking::createVideoPlayerFactory();
      return hybridObject;
    }
  );
  HybridObjectRegistry::registerHybridObjectConstructor(
    "VideoPlayerSourceFactory",
    []() -> std::shared_ptr<HybridObject> {
      std::shared_ptr<HybridVideoPlayerSourceFactorySpec> hybridObject = ReactNativeVideo::ReactNativeVideoAutolinking::createVideoPlayerSourceFactory();
      return hybridObject;
    }
  );
  HybridObjectRegistry::registerHybridObjectConstructor(
    "VideoViewViewManagerFactory",
    []() -> std::shared_ptr<HybridObject> {
      std::shared_ptr<HybridVideoViewViewManagerFactorySpec> hybridObject = ReactNativeVideo::ReactNativeVideoAutolinking::createVideoViewViewManagerFactory();
      return hybridObject;
    }
  );
}

@end
