///
/// TimedMetadata.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import NitroModules

/**
 * Represents an instance of `TimedMetadata`, backed by a C++ struct.
 */
public typealias TimedMetadata = margelo.nitro.video.TimedMetadata

public extension TimedMetadata {
  private typealias bridge = margelo.nitro.video.bridge.swift

  /**
   * Create a new instance of `TimedMetadata`.
   */
  init(metadata: [TimedMetadataObject]) {
    self.init(metadata.withUnsafeBufferPointer { __pointer -> bridge.std__vector_TimedMetadataObject_ in
      return bridge.copy_std__vector_TimedMetadataObject_(__pointer.baseAddress!, metadata.count)
    })
  }

  var metadata: [TimedMetadataObject] {
    @inline(__always)
    get {
      return { () -> [TimedMetadataObject] in
        let __data = bridge.get_data_std__vector_TimedMetadataObject_(self.__metadata)
        let __size = self.__metadata.size()
        return Array(UnsafeBufferPointer(start: __data, count: __size))
      }()
    }
    @inline(__always)
    set {
      self.__metadata = newValue.withUnsafeBufferPointer { __pointer -> bridge.std__vector_TimedMetadataObject_ in
        return bridge.copy_std__vector_TimedMetadataObject_(__pointer.baseAddress!, newValue.count)
      }
    }
  }
}
