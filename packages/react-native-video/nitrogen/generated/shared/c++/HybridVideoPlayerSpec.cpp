///
/// HybridVideoPlayerSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "HybridVideoPlayerSpec.hpp"

namespace margelo::nitro::video {

  void HybridVideoPlayerSpec::loadHybridMethods() {
    // load base methods/properties
    HybridObject::loadHybridMethods();
    // load custom methods/properties
    registerHybrids(this, [](Prototype& prototype) {
      prototype.registerHybridGetter("source", &HybridVideoPlayerSpec::getSource);
      prototype.registerHybridGetter("eventEmitter", &HybridVideoPlayerSpec::getEventEmitter);
      prototype.registerHybridGetter("status", &HybridVideoPlayerSpec::getStatus);
      prototype.registerHybridGetter("duration", &HybridVideoPlayerSpec::getDuration);
      prototype.registerHybridGetter("volume", &HybridVideoPlayerSpec::getVolume);
      prototype.registerHybridSetter("volume", &HybridVideoPlayerSpec::setVolume);
      prototype.registerHybridGetter("currentTime", &HybridVideoPlayerSpec::getCurrentTime);
      prototype.registerHybridSetter("currentTime", &HybridVideoPlayerSpec::setCurrentTime);
      prototype.registerHybridGetter("muted", &HybridVideoPlayerSpec::getMuted);
      prototype.registerHybridSetter("muted", &HybridVideoPlayerSpec::setMuted);
      prototype.registerHybridGetter("loop", &HybridVideoPlayerSpec::getLoop);
      prototype.registerHybridSetter("loop", &HybridVideoPlayerSpec::setLoop);
      prototype.registerHybridGetter("rate", &HybridVideoPlayerSpec::getRate);
      prototype.registerHybridSetter("rate", &HybridVideoPlayerSpec::setRate);
      prototype.registerHybridGetter("isPlaying", &HybridVideoPlayerSpec::getIsPlaying);
      prototype.registerHybridMethod("replaceSourceAsync", &HybridVideoPlayerSpec::replaceSourceAsync);
      prototype.registerHybridMethod("clean", &HybridVideoPlayerSpec::clean);
      prototype.registerHybridMethod("preload", &HybridVideoPlayerSpec::preload);
      prototype.registerHybridMethod("play", &HybridVideoPlayerSpec::play);
      prototype.registerHybridMethod("pause", &HybridVideoPlayerSpec::pause);
      prototype.registerHybridMethod("seekBy", &HybridVideoPlayerSpec::seekBy);
      prototype.registerHybridMethod("seekTo", &HybridVideoPlayerSpec::seekTo);
    });
  }

  void HybridVideoPlayerSpec::dispose() {
    clean();
    HybridObject::dispose();
  }
} // namespace margelo::nitro::video
