///
/// NativeDrmParams.kt
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

package com.margelo.nitro.video

import androidx.annotation.Keep
import com.facebook.proguard.annotations.DoNotStrip
import com.margelo.nitro.core.*


/**
 * Represents the JavaScript object/struct "NativeDrmParams".
 */
@DoNotStrip
@Keep
data class NativeDrmParams(
  @DoNotStrip
  @Keep
  val type: String?,
  @DoNotStrip
  @Keep
  val licenseUrl: String?,
  @DoNotStrip
  @Keep
  val certificateUrl: String?,
  @DoNotStrip
  @Keep
  val contentId: String?,
  @DoNotStrip
  @Keep
  val licenseHeaders: Map<String, String>?,
  @DoNotStrip
  @Keep
  val multiSession: Boolean?,
  @DoNotStrip
  @Keep
  val getLicense: ((payload: OnGetLicensePayload) -> Promise<Promise<String>>)?
) {
  private companion object {
    /**
     * Constructor called from C++
     */
    @DoNotStrip
    @Keep
    @Suppress("unused")
    @JvmStatic
    private fun fromCpp(type: String?, licenseUrl: String?, certificateUrl: String?, contentId: String?, licenseHeaders: Map<String, String>?, multiSession: Boolean?, getLicense: Func_std__shared_ptr_Promise_std__shared_ptr_Promise_std__string_____OnGetLicensePayload?): NativeDrmParams {
      return NativeDrmParams(type, licenseUrl, certificateUrl, contentId, licenseHeaders, multiSession, getLicense?.let { it })
    }
  }
}
